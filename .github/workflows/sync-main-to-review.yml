# .github/workflows/sync-main-to-review.yml

# 워크플로우의 이름
name: Sync main, Create PR to main

# 언제 이 워크플로우를 실행할지 정의
on:
  push:
    branches:
      - main

# 실행할 작업들의 목록
jobs:
  sync-and-pr: # job 이름 변경 (가독성)
    runs-on: ubuntu-latest
    
    # [가장 중요한 변경점] 이 작업에 필요한 권한을 명시적으로 부여합니다.
    permissions:
      contents: write      # 레포지토리 코드를 체크아웃하고, 커밋하고, 푸시할 권한
      pull-requests: write # Pull Request를 생성할 권한

    steps:
      # 1. GitHub Actions가 코드에 접근할 수 있도록 레포지토리를 체크아웃합니다.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 자동 커밋을 위한 Git 유저 정보를 설정합니다.
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # 3. main 브랜치의 변경사항을 review 브랜치로 병합하고 푸시합니다.
      - name: Merge main into review and push
        run: |
          git checkout review
          git merge origin/main -m "chore: Auto-sync from main"
          git push origin review

      # 4. 'review' -> 'main'으로 Pull Request를 생성합니다.
      - name: Create Pull Request if not exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 'review' 브랜치에서 'main' 브랜치로 가는 PR이 이미 열려 있는지 확인합니다.
          existing_pr=$(gh pr list --head review --base main --state open --json number)
          
          # 이미 열린 PR이 없다면 (결과가 '[]' 라면) 새로 생성합니다.
          if [ "$existing_pr" == "[]" ]; then
            echo "Creating a new pull request."
            gh pr create \
              --base main \
              --head review \
              --title "🤖 [Auto PR] Review changes from main" \
              --body "This PR was automatically created by a GitHub Action. Please review the changes and merge when ready. /cc @Seung-zedd"
          else
            echo "An open pull request from 'review' to 'main' already exists."
          fi
